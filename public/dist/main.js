(()=>{"use strict";const e=function(){let e=1e4;function t(e){return document.getElementById(e)}return{getId:t,addListener:function(e,t,n){t.addEventListener(e,n)},checkMatch:function(e,t){if(t.slice(0,e.length)===e)return!0},resetContent:function(){t("content").innerHTML=""},showFlashMessage:function(n,a){const i=t("app"),o=document.createElement("p");o.setAttribute("id","flashmessage"),o.style.zIndex=e,e+=1,i.prepend(o),o.textContent=n,o.classList.add(a),o.classList.add("slide"),setTimeout((()=>{i.removeChild(o)}),4e3)}}}(),t=function(){let e=!1,t="";return{getLoggedIn:function(){return e},setLoggedIn:function(t){e=t},setUserName:function(e){t=e},getUserName:function(){return t},verifyToken:async function(){const e="http://localhost:8000/api/get_user?token="+localStorage.getItem("token"),t=await fetch(e,{method:"GET",headers:{"Content-Type":"application/json"}});return(await t.json()).user??!1}}}(),n="http://localhost:8000",a=function(){let a=!1;return{init:async function(i){const o=e.getId("content");if(!t.getLoggedIn())return void(o.innerHTML='\n                <div class="content_inner">\n                    <h2>Add</h2>\n                    <div class="img_wrapper">\n                        <img src="./images/atlantic_mackerel_2.jpg" >\n                    </div>\n                    <div class="info">\n                        <p>You have to log in to be able to add a catch.</p>\n                        <p>Sign in or create an account.</p>\n                    </div>\n                </div>\n                ');const d=await async function(t){var a=new Headers;a.append("Authorization","Bearer "+localStorage.getItem("token"));var i={method:"GET",headers:a,redirect:"follow"};try{const e=await fetch(`${n}/api/fishcatch/${t}`,i);return await e.json()}catch(t){console.error(t),e.showFlashMessage("The request failed.","error")}}(i);o.innerHTML=`\n        <div class="content_inner">\n            <h2>Edit</h2>\n            <form action="" id="add-form">\n                <input type="text" id="add_input_species" placeholder="Species" class="input" value="${d.species}">\n                <input type="number" id="add_input_length" placeholder="Length (cm)" class="input" value="${d.length}">\n                <input type="number" id="add_input_weight" placeholder="Weight (g)" class="input" value="${d.weight}">\n                <input type="date" id="add_input_date" class="input" value="${d.date}">\n                <p>Click on the map to set location</p>\n                <div id="map"></div>\n                <img src="${n}${d.imageurl}" alt="Catch image" id="preview_image" />\n                <label for="uploadImage" id="uploadImageLabel">Change image</label>\n                <input type="file" id="uploadImage">\n                <button id="add_catch" class="button">Save</button>\n            </form>\n        </div>\n        `,document.getElementById("uploadImage").addEventListener("change",(e=>{const t=URL.createObjectURL(e.target.files[0]);document.getElementById("preview_image").src=t}));const r=e.getId("add_catch");!function(e){var t=e.split(",")[0],n=e.split(",")[1];a=t+","+n;var i=L.map("map").setView([t,n],10);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(i);const o=L.layerGroup().addTo(i);L.marker([t,n]).addTo(o),i.addEventListener("click",(e=>{a=e.latlng.lat+","+e.latlng.lng,t=e.latlng.lat,n=e.latlng.lng,o.clearLayers(),L.marker([t,n]).addTo(o)}))}(d.location),e.addListener("click",r,(t=>{t.preventDefault();const o=e.getId("add_input_species").value,d=e.getId("add_input_length").value,r=e.getId("add_input_weight").value,c=e.getId("add_input_date").value,l=e.getId("uploadImage").files[0];""!=o&&""!=d&&""!=r&&""!=c&&a?async function(t,a){let i=new FormData;for(const e in t)i.append(e,t[e]);const o=await fetch(`${n}/api/update/${a}`,{method:"POST",headers:{Authorization:"Bearer "+localStorage.getItem("token")},body:i,redirect:"follow"}),d=await o.json();d.success?(e.showFlashMessage("Catch updated!","success"),e.resetContent(),s.init()):d.error?(console.error(d.error),e.showFlashMessage(d.error,"error")):e.showFlashMessage("The request failed.","error")}({species:o,length:d,weight:r,date:c,location:a,uploadImage:l},i):e.showFlashMessage("Fill out all fields!","error")}))}}}(),i=async function(t){const n=await fetch(`http://localhost:8000/api/delete/${t}`,{method:"DELETE",headers:{Authorization:"Bearer "+localStorage.getItem("token")}}),a=await n.json();a.success?(e.showFlashMessage("Catch deleted!","success"),e.resetContent(),s.init()):a.error?e.showFlashMessage(a.error,"error"):e.showFlashMessage("The request failed.","error")},o="http://localhost:8000",s=function(){let n={};const s=e.getId("content");let d,r;const c=new L.FeatureGroup;var l=[],g="",p=0,u="more",h=0,m="more";function f(){const e=n.filter((e=>e.species.toLowerCase().includes(g.toLowerCase()))).filter((e=>e.length>=p)).filter((e=>e.length<=u)).filter((e=>e.weight>=h)).filter((e=>e.weight<=m));c.clearLayers(),w(),v(e)}function v(e){e.forEach((e=>{const n=e.location.split(",")[0],a=e.location.split(",")[1],i=`catch_${e.id}`,s=e.username===t.getUserName()?`<div class="editButtons"><button id='edit_${i}'>Edit</button><button id='delete_${i}'>Delete</button></div>`:"",d=`\n                <section>\n                    <h2>${e.species}</h2>\n                    <img\n                        src="${o}${e.imageurl}"\n                        alt="catch_${e.imageurl}"\n                    />\n                    <p>${e.date}</p>\n                    <p>${e.length} cm</p>\n                    <p>${e.weight} g</p>\n                    <p>Caught by ${e.username}</p>\n                    ${s}\n                </section>\n            `,r=L.marker([n,a]).bindPopup(d);c.addLayer(r)}));const n=e=>{const t=e.target.id.split("_");"delete"===t[0]&&i(t[2]),"edit"===t[0]&&a.init(t[2])};l.push(n),document.addEventListener("click",n)}function w(){l.forEach((e=>{document.removeEventListener("click",e)})),l=[]}return{init:async function(){w(),n=await async function(){let e=await fetch(`${o}/api/public_fishcatch`);return await e.json()}(),function(){d=document.createElement("div"),d.classList.add("content_inner"),s.appendChild(d);const t=document.createElement("h2");t.textContent="Catches",d.appendChild(t),function(){const t=document.createElement("section");t.classList.add("filters"),d.appendChild(t);const n=document.createElement("input");n.classList.add("input"),n.setAttribute("type","text"),n.setAttribute("placeholder","Filter by species"),t.appendChild(n),e.addListener("keyup",n,(e=>{g=e.target.value,f()}));const a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("id","lenghtSlider"),t.appendChild(a);const i=document.createElement("label");i.textContent="length (cm)",i.setAttribute("for","lengthSlider"),t.appendChild(i);var o=(l=[0,10,20,30,40,50,60,70,80,90,100,125,150,175,200,"more"]).indexOf(0),s=l.indexOf("more");$("#lenghtSlider").ionRangeSlider({skin:"round",type:"double",grid:!0,from:o,to:s,prefix:"cm",values:l,onChange:e=>{p=e.from_value,u=e.to_value,f()}});const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","weightSlider"),t.appendChild(r);const c=document.createElement("label");var l;c.textContent="weight (g)",i.setAttribute("for","weightSlider"),t.appendChild(c),o=(l=[0,500,600,700,800,900,1e3,2e3,3e3,4e3,5e3,7500,1e4,"more"]).indexOf(0),s=l.indexOf("more"),$("#weightSlider").ionRangeSlider({skin:"round",type:"double",grid:!0,from:o,to:s,prefix:"g",values:l,onChange:e=>{h=e.from_value,m=e.to_value,f()}})}(),function(){let e=document.createElement("div");e.setAttribute("id","map"),e.setAttribute("class","full_height"),d.appendChild(e),r=L.map("map").setView([56.04,12.65],10),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(r),c.addTo(r),v(n)}()}()}}}(),d=function(){let n=!1;return{init:function(){const a=e.getId("content");if(!t.getLoggedIn())return void(a.innerHTML='\n                <div class="content_inner">\n                    <h2>Add</h2>\n                    <div class="img_wrapper">\n                        <img src="./images/atlantic_mackerel_2.jpg" >\n                    </div>\n                    <div class="info">\n                        <p>You have to log in to be able to add a catch.</p>\n                        <p>Sign in or create an account.</p>\n                    </div>\n                </div>\n                ');a.innerHTML='\n        <div class="content_inner">\n            <h2>Add</h2>\n            <form action="" id="add-form">\n                <input type="text" id="add_input_species" placeholder="Species" class="input">\n                <input type="number" id="add_input_length" placeholder="Length (cm)" class="input">\n                <input type="number" id="add_input_weight" placeholder="Weight (g)" class="input">\n                <input type="date" id="add_input_date" class="input">\n                <p>Click on the map to set location</p>\n                <div id="map"></div>\n                <img alt="Catch image" id="preview_image" style="display: none;" />\n                <label for="uploadImage" id="uploadImageLabel">Add image</label>\n                <input type="file" id="uploadImage">\n                <button id="add_catch" class="button">Save</button>\n            </form>\n        </div>\n        ',function(){var e=L.map("map").setView([56.04,12.65],10);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(e);const t=L.layerGroup().addTo(e);e.addEventListener("click",(e=>{n=e.latlng.lat+","+e.latlng.lng;const a=e.latlng.lat,i=e.latlng.lng;t.clearLayers(),L.marker([a,i]).addTo(t)}))}(),document.getElementById("uploadImage").addEventListener("change",(e=>{const t=URL.createObjectURL(e.target.files[0]),n=document.getElementById("preview_image");n.style.display="initial",n.src=t}));const i=e.getId("add_catch");e.addListener("click",i,(t=>{t.preventDefault();const a=e.getId("add_input_species").value,i=e.getId("add_input_length").value,o=e.getId("add_input_weight").value,d=e.getId("add_input_date").value,r=e.getId("uploadImage").files[0];""!=a&&""!=i&&""!=o&&""!=d&&n&&r?async function(t){let n=new FormData;for(const e in t)n.append(e,t[e]);const a=await fetch("http://localhost:8000/api/create",{method:"POST",headers:{Authorization:"Bearer "+localStorage.getItem("token")},body:n}),i=await a.json();i.success?(e.showFlashMessage("Catch added!","success"),e.resetContent(),s.init()):i.error?e.showFlashMessage(i.error,"error"):e.showFlashMessage("The request failed.","error")}({species:a,length:i,weight:o,date:d,location:n,uploadImage:r}):e.showFlashMessage("Fill out all fields!","error")}))}}}(),r=e.addListener,c=e.getId,l=function(){let e={},t=!1;function n(){if(c("content").innerHTML='\n            <div class="content_inner" id="content_inner">\n                <h2>Catches</h2>\n                <table id="catch_list">\n                    <thead>\n                        <tr>\n                            <th id="date_header" class="sortable">Date &#8593;&#8595;</th>\n                            <th id="location_header">Location</th>\n                            <th id="species_header">Species</th>\n                            <th id="length_header" class="sortable">Length (cm) &#8593;&#8595;</th>\n                            <th id="weight_header" class="sortable">Weight (g) &#8593;&#8595;</th>\n                            <th id="user_header">User</th>\n                        </tr>\n                    </thead>\n                </table>\n            </div>\n        ',!e.length){const e=c("content_inner"),t=document.createElement("p");t.classList.add("infoPara"),t.textContent="There are not yet any catches.",e.appendChild(t)}const t=c("catch_list");let n="";n+='<tbody id="catch_list_body">',e.forEach((e=>{n+=`\n                <tr>\n                    <td>${e.date.slice(2)}</td>\n                    <td>\n                        ${e.location.split(",")[0].slice(0,5)},${e.location.split(",")[1].slice(0,5)}\n                    </td>\n                    <td>${e.species}</td>\n                    <td>${e.length}</td>\n                    <td>${e.weight}</td>\n                    <td>${e.username}</td>\n                </tr>\n            `})),n+="</tbody>",t.innerHTML+=n,r("click",c("date_header"),(()=>{let e=c("catch_list_body");e.parentNode.removeChild(e),a("date")})),r("click",c("length_header"),(()=>{let e=c("catch_list_body");e.parentNode.removeChild(e),a("length")})),r("click",c("weight_header"),(()=>{let e=c("catch_list_body");e.parentNode.removeChild(e),a("weight")}))}function a(a){return t&&"desc"!==t?"asc"===t?(e=e.sort(((e,t)=>"date"===a?new Date(t[a])-new Date(e[a]):t[a]-e[a])),t="desc",void n()):void 0:(e=e.sort(((e,t)=>"date"===a?new Date(e[a])-new Date(t[a]):e[a]-t[a])),t="asc",void n())}return{init:async function(){e=await async function(){let e=await fetch("http://localhost:8000/api/public_fishcatch");return await e.json()}(),n()}}}(),g=function(){e.getId("content").innerHTML='\n        <div class="content_inner">\n            <h2>Sign in</h2>\n            <form action="" id="add-form">\n                <input type="text" id="email" placeholder="Email" class="input">\n                <input type="password" id="password" placeholder="Password" class="input">\n                <button id="login" class="button">Log in</button>\n            </form>\n        </div>\n        ',e.addListener("click",e.getId("login"),(n=>{n.preventDefault();const a=e.getId("email").value,i=e.getId("password").value;a&&i?async function(n){const a=await fetch("http://localhost:8000/api/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}),i=await a.json();if(i.success){localStorage.setItem("token",i.token);const n=await t.verifyToken();t.setLoggedIn(!0),t.setUserName(n.name);const a=document.createElement("p");a.setAttribute("id","userInfo"),a.textContent=`Logged in as ${n.name}`,document.getElementById("main").prepend(a);let o=e.getId("nav_login");o.innerHTML="<img src='./images/logout.svg'>",o.setAttribute("title","Logout"),e.showFlashMessage("You logged in!","success"),e.resetContent(),s.init()}else e.showFlashMessage("Login failed.","error")}({email:a,password:i}):e.showFlashMessage("Fill out all fields.","error")}))},p=async function(){const n="http://localhost:8000/api/logout?token="+localStorage.getItem("token"),a=await fetch(n,{method:"GET",headers:{"Content-Type":"application/json"}});if((await a.json()).success){e.showFlashMessage("You logged out.","success"),localStorage.removeItem("token"),t.setLoggedIn(!1),t.setUserName("");const n=document.getElementById("userInfo");n.parentNode.removeChild(n);const a=e.getId("nav_login");return a.innerHTML="<img src='./images/login.svg'>",void a.setAttribute("title","Login")}e.showFlashMessage("Logout failed.","error")};!async function(){const n=await t.verifyToken();if(n){const e=document.createElement("p");e.setAttribute("id","userInfo"),e.textContent=`Logged in as ${n.name}`,document.getElementById("main").prepend(e),t.setUserName(n.name),t.setLoggedIn(!0)}document.getElementsByClassName("main_nav")[0].innerHTML=`\n    <a id="nav_add" title="Add catch"><img src="./images/add.svg"></a>\n    <a id="nav_show" title="Show catches in list"><img src="./images/list.svg"></a>\n    <a id="nav_showMap" title="Show catches on map"><img src="./images/map.svg"></a>\n    <a id="nav_login" title="${t.getLoggedIn()?"Logout":"Login"}">\n        <img src="./images/${t.getLoggedIn()?"logout":"login"}.svg">\n    </a>`,s.init(),e.addListener("click",e.getId("nav_add"),(t=>{e.resetContent(),d.init()})),e.addListener("click",e.getId("nav_show"),(t=>{e.resetContent(),l.init()})),e.addListener("click",e.getId("nav_showMap"),(t=>{e.resetContent(),s.init()})),e.addListener("click",e.getId("nav_login"),(async n=>{e.resetContent(),t.getLoggedIn()?(await p(),s.init()):g()}))}()})();